name: Terraform

on:
  push:
    branches: [ "main" ]
    paths:
      - '**/*.tf'
  workflow_dispatch:
  
permissions:
  id-token: write
  contents: read

jobs:
  validate-and-plan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Get Vault token
        id: vault-secrets
        uses: hashicorp/vault-action@v2
        with:
          url: https://vault.tenzin.io
          role: ${{ vars.VAULT_ROLE_TO_ASSUME }}
          method: jwt
          exportToken: true
          secrets: |
            secrets/data/tailscale/github-actions client_id | TS_OAUTH_CLIENT_ID ;
            secrets/data/tailscale/github-actions client_secret | TS_OAUTH_CLIENT_SECRET ;
            secrets/data/kubeconfig/homelab-k8s-dev kubernetes_admin_conf | KUBERNETES_ADMIN_CONF ;

      - name: Tailscale connection
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ steps.vault-secrets.outputs.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ steps.vault-secrets.outputs.TS_OAUTH_CLIENT_SECRET }}
          tags: tag:ci

      - name: Setup kubernetes-admin.conf
        run: |-
          cat <<'eof' > kubernetes-admin.conf
          ${{ steps.vault_secrets.outputs.KUBERNETES_ADMIN_CONF }}
          eof
 
      - name: Run Terraform Init
        run: terraform init
        
      - name: Run Terraform Format
        run: terraform fmt -check
        
      - name: Run Terraform Validate
        run: terraform validate

      - name: Run Terraform Plan
        run: terraform plan

  apply:
    needs: [validate-and-plan]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Get Vault token
        id: vault-secrets
        uses: hashicorp/vault-action@v2
        with:
          url: https://vault.tenzin.io
          role: ${{ vars.VAULT_ROLE_TO_ASSUME }}
          method: jwt
          exportToken: true
          secrets: |
            secrets/data/tailscale/github-actions client_id | TS_OAUTH_CLIENT_ID ;
            secrets/data/tailscale/github-actions client_secret | TS_OAUTH_CLIENT_SECRET ;
            secrets/data/kubeconfig/homelab-k8s-dev kubernetes_admin_conf | KUBERNETES_ADMIN_CONF ;

      - name: Tailscale connection
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ steps.vault-secrets.outputs.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ steps.vault-secrets.outputs.TS_OAUTH_CLIENT_SECRET }}
          tags: tag:ci

      - name: Setup kubernetes-admin.conf
        run: |-
          cat <<'eof' > kubernetes-admin.conf
          ${{ steps.vault_secrets.outputs.KUBERNETES_ADMIN_CONF }}
          eof

      - name: Run Terraform Init
        run: terraform init

      - name: Run Terraform Apply
        run: terraform apply -auto-approve
